from matplotlib import pyplot as plt
def testModel(model, xTest, yTest):
    # Make predictions on test data
    y_pred = model.predict(xTest)

    # Calculate accuracy
    from sklearn.metrics import accuracy_score
    accuracy = accuracy_score(yTest, y_pred)
    print(f'Accuracy: {accuracy*100:.2f}%')

    # Calculate confusion matrix
    from sklearn.metrics import confusion_matrix
    confusion_mat = confusion_matrix(yTest, y_pred)
    print('Confusion Matrix: \n', confusion_mat)

    # Calculate precision and recall
    from sklearn.metrics import precision_score, recall_score
    precision = precision_score(yTest, y_pred)
    recall = recall_score(yTest, y_pred)
    print(f'Precision: {precision*100:.2f}%')
    print(f'Recall: {recall*100:.2f}%')

    # Calculate F1 score
    from sklearn.metrics import f1_score
    f1 = f1_score(yTest, y_pred)
    print(f'F1 Score: {f1*100:.2f}')

    # # Plot ROC curve
    # from sklearn.metrics import roc_auc_score, roc_curve
    # fpr, tpr, thresholds = roc_curve(yTest, y_pred)
    # roc_auc = roc_auc_score(yTest, y_pred)
    # plt.plot(fpr, tpr, label='ROC curve (area = %0.2f)' % roc_auc)
    # plt.xlabel('False Positive Rate')
    # plt.ylabel('True Positive Rate')
    # plt.title('ROC Curve')
    # plt.legend(loc="lower right")
    # plt.show()